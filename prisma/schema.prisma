generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model BookingRequest {
  id          String   @id @default(cuid())
  name        String
  email       String
  phone       String
  address     String
  city        String
  postalCode  String?
  services    String[] // Array of selected services
  message     String?
  preferredDate DateTime?
  preferredTime String?
  propertyType String? // residential, commercial
  estimatedSize String? // small, medium, large
  urgency     String? // standard, urgent
  status      String   @default("pending") // pending, contacted, scheduled, completed, cancelled
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("booking_requests")
}

model ContactInquiry {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  subject   String
  message   String
  formType  String   @default("general") // general, quote, complaint, compliment
  status    String   @default("new") // new, responded, resolved
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contact_inquiries")
}

model ServiceQuote {
  id          String   @id @default(cuid())
  name        String
  email       String
  phone       String
  address     String
  city        String
  postalCode  String?
  service     String   // specific service requested
  description String?  // detailed description of work needed
  propertyType String? // residential, commercial
  estimatedSize String? // small, medium, large
  urgency     String? // standard, urgent
  images      String[] // URLs to uploaded images
  status      String   @default("pending") // pending, quoted, accepted, declined
  quoteAmount Decimal? // quoted price
  notes       String?  // internal notes
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("service_quotes")
}
